router id @primaryIP4@;

ipv6 table ospf6;
ipv4 table ospf4;

timeformat base         iso long;
timeformat log          iso long;
timeformat protocol     iso long;
timeformat route        iso long;

function net_bogon() {
  if net.type = NET_IP4 then return net ~ [
    0.0.0.0/0,
    0.0.0.0/8+,         # RFC 1122 'this' network
    10.0.0.0/8+,        # RFC 1918 private space
    100.64.0.0/10+,     # RFC 6598 Carrier grade nat space
    127.0.0.0/8+,       # RFC 1122 localhost
    169.254.0.0/16+,    # RFC 3927 link local
    172.16.0.0/12+,     # RFC 1918 private space
    192.0.2.0/24+,      # RFC 5737 TEST-NET-1
    192.88.99.0/24+,    # RFC 7526 6to4 anycast relay
    192.168.0.0/16+,    # RFC 1918 private space
    198.18.0.0/15+,     # RFC 2544 benchmarking
    198.51.100.0/24+,   # RFC 5737 TEST-NET-2
    203.0.113.0/24+,    # RFC 5737 TEST-NET-3
    224.0.0.0/4+,       # multicast
    240.0.0.0/4+        # reserved
  ];
  return net ~ [
    ::/0,
    ::/8+,                         # RFC 4291 IPv4-compatible, loopback, et al
    0100::/64+,                    # RFC 6666 Discard-Only
    2001:2::/48+,                  # RFC 5180 BMWG
    2001:10::/28+,                 # RFC 4843 ORCHID
    2001:db8::/32+,                # RFC 3849 documentation
    2002::/16+,                    # RFC 7526 6to4 anycast relay
    3ffe::/16+,                    # RFC 3701 old 6bone
    fc00::/7+,                     # RFC 4193 unique local unicast
    fe80::/10+,                    # RFC 4291 link local unicast
    fec0::/10+,                    # RFC 3879 old site local unicast
    ff00::/8+                      # RFC 4291 multicast
  ];
}

function as_bogon() {
  return bgp_path ~ [
    0,                      # RFC 7607
    23456,                  # RFC 4893 AS_TRANS
    64496..64511,           # RFC 5398 and documentation/example ASNs
    #64512..65534,           # RFC 6996 Private ASNs
    65535,                  # RFC 7300 Last 16 bit ASN
    65536..65551,           # RFC 5398 and documentation/example ASNs
    65552..131071,          # RFC IANA reserved ASNs
    4200000000..4294967294, # RFC 6996 Private ASNs
    4294967295              # RFC 7300 Last 32 bit ASN
  ];
}

function net_local() {
  if net.type = NET_IP4 then return net ~ [ 45.158.40.0/22{22,24} ];
  return net ~ [ 2a0f:5380::/29{29,48} ];
}

template bgp bgp_all {
  local as @localAS@;
  allow local as;
  graceful restart on;
  multihop 64;
}

protocol kernel kernel_igp_ipv6 {
  kernel table 1;
  ipv6 {
    table ospf6;
    import all;
    export filter {
      krt_prefsrc = @primaryIP@;
      accept;
    };
  };
};
protocol kernel kernel_igp_ipv4 {
  kernel table 1;
  ipv4 {
    table ospf4;
    import all;
    export filter {
      krt_prefsrc = @primaryIP4@;
      accept;
    };
  };
}
protocol kernel kernel_bgp_ipv6 {
  kernel table 2;
  ipv6 {
    import all;
    export filter {
      krt_prefsrc = @primaryIP@;
      accept;
    };
  };
};
protocol kernel kernel_bgp_ipv4 {
  kernel table 2;
  ipv4 {
    import all;
    export filter {
      krt_prefsrc = @primaryIP4@;
      accept;
    };
  };
}
protocol device {
  scan time 10;
}
protocol direct {
  interface "*";
  ipv6 { table ospf6; import all; };
  ipv4 { table ospf4; import all; };
}
#protocol direct {
#  interface "e*";
#  ipv6 { import all; };
#  ipv4 { import all; };
#}
